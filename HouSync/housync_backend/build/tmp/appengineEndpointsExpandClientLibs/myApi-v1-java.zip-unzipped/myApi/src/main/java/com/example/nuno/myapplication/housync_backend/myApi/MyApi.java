/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2016-02-18 22:11:37 UTC)
 * on 2016-03-02 at 22:16:35 UTC 
 * Modify at your own risk.
 */

package com.example.nuno.myapplication.housync_backend.myApi;

/**
 * Service definition for MyApi (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link MyApiRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class MyApi extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.21.0 of the myApi library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://myApplicationId.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "myApi/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public MyApi(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  MyApi(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "addUserInHouse".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link AddUserInHouse#execute()} method to invoke the remote operation.
   *
   * @param houseId
   * @param userId
   * @return the request
   */
  public AddUserInHouse addUserInHouse(java.lang.Integer houseId, java.lang.Integer userId) throws java.io.IOException {
    AddUserInHouse result = new AddUserInHouse(houseId, userId);
    initialize(result);
    return result;
  }

  public class AddUserInHouse extends MyApiRequest<com.example.nuno.myapplication.housync_backend.myApi.model.HouSyncHouse> {

    private static final String REST_PATH = "addUserInHouse/{houseId}/{user_id}";

    /**
     * Create a request for the method "addUserInHouse".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link AddUserInHouse#execute()} method to invoke the remote operation.
     * <p> {@link AddUserInHouse#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
     * ientRequest)} must be called to initialize this instance immediately after invoking the
     * constructor. </p>
     *
     * @param houseId
     * @param userId
     * @since 1.13
     */
    protected AddUserInHouse(java.lang.Integer houseId, java.lang.Integer userId) {
      super(MyApi.this, "POST", REST_PATH, null, com.example.nuno.myapplication.housync_backend.myApi.model.HouSyncHouse.class);
      this.houseId = com.google.api.client.util.Preconditions.checkNotNull(houseId, "Required parameter houseId must be specified.");
      this.userId = com.google.api.client.util.Preconditions.checkNotNull(userId, "Required parameter userId must be specified.");
    }

    @Override
    public AddUserInHouse setAlt(java.lang.String alt) {
      return (AddUserInHouse) super.setAlt(alt);
    }

    @Override
    public AddUserInHouse setFields(java.lang.String fields) {
      return (AddUserInHouse) super.setFields(fields);
    }

    @Override
    public AddUserInHouse setKey(java.lang.String key) {
      return (AddUserInHouse) super.setKey(key);
    }

    @Override
    public AddUserInHouse setOauthToken(java.lang.String oauthToken) {
      return (AddUserInHouse) super.setOauthToken(oauthToken);
    }

    @Override
    public AddUserInHouse setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddUserInHouse) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddUserInHouse setQuotaUser(java.lang.String quotaUser) {
      return (AddUserInHouse) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddUserInHouse setUserIp(java.lang.String userIp) {
      return (AddUserInHouse) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Integer houseId;

    /**

     */
    public java.lang.Integer getHouseId() {
      return houseId;
    }

    public AddUserInHouse setHouseId(java.lang.Integer houseId) {
      this.houseId = houseId;
      return this;
    }

    @com.google.api.client.util.Key("user_id")
    private java.lang.Integer userId;

    /**

     */
    public java.lang.Integer getUserId() {
      return userId;
    }

    public AddUserInHouse setUserId(java.lang.Integer userId) {
      this.userId = userId;
      return this;
    }

    @Override
    public AddUserInHouse set(String parameterName, Object value) {
      return (AddUserInHouse) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "createHouse".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link CreateHouse#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.example.nuno.myapplication.housync_backend.myApi.model.HouSyncHouse}
   * @return the request
   */
  public CreateHouse createHouse(com.example.nuno.myapplication.housync_backend.myApi.model.HouSyncHouse content) throws java.io.IOException {
    CreateHouse result = new CreateHouse(content);
    initialize(result);
    return result;
  }

  public class CreateHouse extends MyApiRequest<com.example.nuno.myapplication.housync_backend.myApi.model.HouSyncHouse> {

    private static final String REST_PATH = "createHouse";

    /**
     * Create a request for the method "createHouse".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link CreateHouse#execute()} method to invoke the remote operation. <p>
     * {@link
     * CreateHouse#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.example.nuno.myapplication.housync_backend.myApi.model.HouSyncHouse}
     * @since 1.13
     */
    protected CreateHouse(com.example.nuno.myapplication.housync_backend.myApi.model.HouSyncHouse content) {
      super(MyApi.this, "POST", REST_PATH, content, com.example.nuno.myapplication.housync_backend.myApi.model.HouSyncHouse.class);
    }

    @Override
    public CreateHouse setAlt(java.lang.String alt) {
      return (CreateHouse) super.setAlt(alt);
    }

    @Override
    public CreateHouse setFields(java.lang.String fields) {
      return (CreateHouse) super.setFields(fields);
    }

    @Override
    public CreateHouse setKey(java.lang.String key) {
      return (CreateHouse) super.setKey(key);
    }

    @Override
    public CreateHouse setOauthToken(java.lang.String oauthToken) {
      return (CreateHouse) super.setOauthToken(oauthToken);
    }

    @Override
    public CreateHouse setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CreateHouse) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CreateHouse setQuotaUser(java.lang.String quotaUser) {
      return (CreateHouse) super.setQuotaUser(quotaUser);
    }

    @Override
    public CreateHouse setUserIp(java.lang.String userIp) {
      return (CreateHouse) super.setUserIp(userIp);
    }

    @Override
    public CreateHouse set(String parameterName, Object value) {
      return (CreateHouse) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "deleteHouse".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link DeleteHouse#execute()} method to invoke the remote operation.
   *
   * @param houseId
   * @return the request
   */
  public DeleteHouse deleteHouse(java.lang.Integer houseId) throws java.io.IOException {
    DeleteHouse result = new DeleteHouse(houseId);
    initialize(result);
    return result;
  }

  public class DeleteHouse extends MyApiRequest<Void> {

    private static final String REST_PATH = "house/{houseId}";

    /**
     * Create a request for the method "deleteHouse".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link DeleteHouse#execute()} method to invoke the remote operation. <p>
     * {@link
     * DeleteHouse#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param houseId
     * @since 1.13
     */
    protected DeleteHouse(java.lang.Integer houseId) {
      super(MyApi.this, "DELETE", REST_PATH, null, Void.class);
      this.houseId = com.google.api.client.util.Preconditions.checkNotNull(houseId, "Required parameter houseId must be specified.");
    }

    @Override
    public DeleteHouse setAlt(java.lang.String alt) {
      return (DeleteHouse) super.setAlt(alt);
    }

    @Override
    public DeleteHouse setFields(java.lang.String fields) {
      return (DeleteHouse) super.setFields(fields);
    }

    @Override
    public DeleteHouse setKey(java.lang.String key) {
      return (DeleteHouse) super.setKey(key);
    }

    @Override
    public DeleteHouse setOauthToken(java.lang.String oauthToken) {
      return (DeleteHouse) super.setOauthToken(oauthToken);
    }

    @Override
    public DeleteHouse setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (DeleteHouse) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public DeleteHouse setQuotaUser(java.lang.String quotaUser) {
      return (DeleteHouse) super.setQuotaUser(quotaUser);
    }

    @Override
    public DeleteHouse setUserIp(java.lang.String userIp) {
      return (DeleteHouse) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Integer houseId;

    /**

     */
    public java.lang.Integer getHouseId() {
      return houseId;
    }

    public DeleteHouse setHouseId(java.lang.Integer houseId) {
      this.houseId = houseId;
      return this;
    }

    @Override
    public DeleteHouse set(String parameterName, Object value) {
      return (DeleteHouse) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getAllHouses".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link GetAllHouses#execute()} method to invoke the remote operation.
   *
   * @param userId
   * @return the request
   */
  public GetAllHouses getAllHouses(java.lang.Integer userId) throws java.io.IOException {
    GetAllHouses result = new GetAllHouses(userId);
    initialize(result);
    return result;
  }

  public class GetAllHouses extends MyApiRequest<com.example.nuno.myapplication.housync_backend.myApi.model.HouSyncHouseCollection> {

    private static final String REST_PATH = "housynchousecollection/{userId}";

    /**
     * Create a request for the method "getAllHouses".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link GetAllHouses#execute()} method to invoke the remote operation. <p>
     * {@link
     * GetAllHouses#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param userId
     * @since 1.13
     */
    protected GetAllHouses(java.lang.Integer userId) {
      super(MyApi.this, "GET", REST_PATH, null, com.example.nuno.myapplication.housync_backend.myApi.model.HouSyncHouseCollection.class);
      this.userId = com.google.api.client.util.Preconditions.checkNotNull(userId, "Required parameter userId must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetAllHouses setAlt(java.lang.String alt) {
      return (GetAllHouses) super.setAlt(alt);
    }

    @Override
    public GetAllHouses setFields(java.lang.String fields) {
      return (GetAllHouses) super.setFields(fields);
    }

    @Override
    public GetAllHouses setKey(java.lang.String key) {
      return (GetAllHouses) super.setKey(key);
    }

    @Override
    public GetAllHouses setOauthToken(java.lang.String oauthToken) {
      return (GetAllHouses) super.setOauthToken(oauthToken);
    }

    @Override
    public GetAllHouses setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetAllHouses) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetAllHouses setQuotaUser(java.lang.String quotaUser) {
      return (GetAllHouses) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetAllHouses setUserIp(java.lang.String userIp) {
      return (GetAllHouses) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Integer userId;

    /**

     */
    public java.lang.Integer getUserId() {
      return userId;
    }

    public GetAllHouses setUserId(java.lang.Integer userId) {
      this.userId = userId;
      return this;
    }

    @Override
    public GetAllHouses set(String parameterName, Object value) {
      return (GetAllHouses) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getHouseData".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link GetHouseData#execute()} method to invoke the remote operation.
   *
   * @param houseId
   * @return the request
   */
  public GetHouseData getHouseData(java.lang.Integer houseId) throws java.io.IOException {
    GetHouseData result = new GetHouseData(houseId);
    initialize(result);
    return result;
  }

  public class GetHouseData extends MyApiRequest<com.example.nuno.myapplication.housync_backend.myApi.model.HouSyncHouse> {

    private static final String REST_PATH = "housynchouse/{houseId}";

    /**
     * Create a request for the method "getHouseData".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link GetHouseData#execute()} method to invoke the remote operation. <p>
     * {@link
     * GetHouseData#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param houseId
     * @since 1.13
     */
    protected GetHouseData(java.lang.Integer houseId) {
      super(MyApi.this, "GET", REST_PATH, null, com.example.nuno.myapplication.housync_backend.myApi.model.HouSyncHouse.class);
      this.houseId = com.google.api.client.util.Preconditions.checkNotNull(houseId, "Required parameter houseId must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetHouseData setAlt(java.lang.String alt) {
      return (GetHouseData) super.setAlt(alt);
    }

    @Override
    public GetHouseData setFields(java.lang.String fields) {
      return (GetHouseData) super.setFields(fields);
    }

    @Override
    public GetHouseData setKey(java.lang.String key) {
      return (GetHouseData) super.setKey(key);
    }

    @Override
    public GetHouseData setOauthToken(java.lang.String oauthToken) {
      return (GetHouseData) super.setOauthToken(oauthToken);
    }

    @Override
    public GetHouseData setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetHouseData) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetHouseData setQuotaUser(java.lang.String quotaUser) {
      return (GetHouseData) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetHouseData setUserIp(java.lang.String userIp) {
      return (GetHouseData) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Integer houseId;

    /**

     */
    public java.lang.Integer getHouseId() {
      return houseId;
    }

    public GetHouseData setHouseId(java.lang.Integer houseId) {
      this.houseId = houseId;
      return this;
    }

    @Override
    public GetHouseData set(String parameterName, Object value) {
      return (GetHouseData) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getHouseUsers".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link GetHouseUsers#execute()} method to invoke the remote operation.
   *
   * @param houseId
   * @return the request
   */
  public GetHouseUsers getHouseUsers(java.lang.Integer houseId) throws java.io.IOException {
    GetHouseUsers result = new GetHouseUsers(houseId);
    initialize(result);
    return result;
  }

  public class GetHouseUsers extends MyApiRequest<com.example.nuno.myapplication.housync_backend.myApi.model.HouSyncUserCollection> {

    private static final String REST_PATH = "housyncusercollection/{houseId}";

    /**
     * Create a request for the method "getHouseUsers".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link GetHouseUsers#execute()} method to invoke the remote operation. <p>
     * {@link GetHouseUsers#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientR
     * equest)} must be called to initialize this instance immediately after invoking the constructor.
     * </p>
     *
     * @param houseId
     * @since 1.13
     */
    protected GetHouseUsers(java.lang.Integer houseId) {
      super(MyApi.this, "GET", REST_PATH, null, com.example.nuno.myapplication.housync_backend.myApi.model.HouSyncUserCollection.class);
      this.houseId = com.google.api.client.util.Preconditions.checkNotNull(houseId, "Required parameter houseId must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetHouseUsers setAlt(java.lang.String alt) {
      return (GetHouseUsers) super.setAlt(alt);
    }

    @Override
    public GetHouseUsers setFields(java.lang.String fields) {
      return (GetHouseUsers) super.setFields(fields);
    }

    @Override
    public GetHouseUsers setKey(java.lang.String key) {
      return (GetHouseUsers) super.setKey(key);
    }

    @Override
    public GetHouseUsers setOauthToken(java.lang.String oauthToken) {
      return (GetHouseUsers) super.setOauthToken(oauthToken);
    }

    @Override
    public GetHouseUsers setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetHouseUsers) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetHouseUsers setQuotaUser(java.lang.String quotaUser) {
      return (GetHouseUsers) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetHouseUsers setUserIp(java.lang.String userIp) {
      return (GetHouseUsers) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Integer houseId;

    /**

     */
    public java.lang.Integer getHouseId() {
      return houseId;
    }

    public GetHouseUsers setHouseId(java.lang.Integer houseId) {
      this.houseId = houseId;
      return this;
    }

    @Override
    public GetHouseUsers set(String parameterName, Object value) {
      return (GetHouseUsers) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getUser".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link GetUser#execute()} method to invoke the remote operation.
   *
   * @param userId
   * @return the request
   */
  public GetUser getUser(java.lang.Integer userId) throws java.io.IOException {
    GetUser result = new GetUser(userId);
    initialize(result);
    return result;
  }

  public class GetUser extends MyApiRequest<com.example.nuno.myapplication.housync_backend.myApi.model.HouSyncUser> {

    private static final String REST_PATH = "housyncuser/{userId}";

    /**
     * Create a request for the method "getUser".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link GetUser#execute()} method to invoke the remote operation. <p>
     * {@link
     * GetUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param userId
     * @since 1.13
     */
    protected GetUser(java.lang.Integer userId) {
      super(MyApi.this, "GET", REST_PATH, null, com.example.nuno.myapplication.housync_backend.myApi.model.HouSyncUser.class);
      this.userId = com.google.api.client.util.Preconditions.checkNotNull(userId, "Required parameter userId must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetUser setAlt(java.lang.String alt) {
      return (GetUser) super.setAlt(alt);
    }

    @Override
    public GetUser setFields(java.lang.String fields) {
      return (GetUser) super.setFields(fields);
    }

    @Override
    public GetUser setKey(java.lang.String key) {
      return (GetUser) super.setKey(key);
    }

    @Override
    public GetUser setOauthToken(java.lang.String oauthToken) {
      return (GetUser) super.setOauthToken(oauthToken);
    }

    @Override
    public GetUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetUser setQuotaUser(java.lang.String quotaUser) {
      return (GetUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetUser setUserIp(java.lang.String userIp) {
      return (GetUser) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Integer userId;

    /**

     */
    public java.lang.Integer getUserId() {
      return userId;
    }

    public GetUser setUserId(java.lang.Integer userId) {
      this.userId = userId;
      return this;
    }

    @Override
    public GetUser set(String parameterName, Object value) {
      return (GetUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeUserFromHouse".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link RemoveUserFromHouse#execute()} method to invoke the remote operation.
   *
   * @param houseId
   * @param userId
   * @return the request
   */
  public RemoveUserFromHouse removeUserFromHouse(java.lang.Integer houseId, java.lang.Integer userId) throws java.io.IOException {
    RemoveUserFromHouse result = new RemoveUserFromHouse(houseId, userId);
    initialize(result);
    return result;
  }

  public class RemoveUserFromHouse extends MyApiRequest<com.example.nuno.myapplication.housync_backend.myApi.model.HouSyncHouse> {

    private static final String REST_PATH = "userfromhouse/{houseId}/{user_id}";

    /**
     * Create a request for the method "removeUserFromHouse".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link RemoveUserFromHouse#execute()} method to invoke the remote
     * operation. <p> {@link RemoveUserFromHouse#initialize(com.google.api.client.googleapis.services.
     * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param houseId
     * @param userId
     * @since 1.13
     */
    protected RemoveUserFromHouse(java.lang.Integer houseId, java.lang.Integer userId) {
      super(MyApi.this, "DELETE", REST_PATH, null, com.example.nuno.myapplication.housync_backend.myApi.model.HouSyncHouse.class);
      this.houseId = com.google.api.client.util.Preconditions.checkNotNull(houseId, "Required parameter houseId must be specified.");
      this.userId = com.google.api.client.util.Preconditions.checkNotNull(userId, "Required parameter userId must be specified.");
    }

    @Override
    public RemoveUserFromHouse setAlt(java.lang.String alt) {
      return (RemoveUserFromHouse) super.setAlt(alt);
    }

    @Override
    public RemoveUserFromHouse setFields(java.lang.String fields) {
      return (RemoveUserFromHouse) super.setFields(fields);
    }

    @Override
    public RemoveUserFromHouse setKey(java.lang.String key) {
      return (RemoveUserFromHouse) super.setKey(key);
    }

    @Override
    public RemoveUserFromHouse setOauthToken(java.lang.String oauthToken) {
      return (RemoveUserFromHouse) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveUserFromHouse setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveUserFromHouse) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveUserFromHouse setQuotaUser(java.lang.String quotaUser) {
      return (RemoveUserFromHouse) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveUserFromHouse setUserIp(java.lang.String userIp) {
      return (RemoveUserFromHouse) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Integer houseId;

    /**

     */
    public java.lang.Integer getHouseId() {
      return houseId;
    }

    public RemoveUserFromHouse setHouseId(java.lang.Integer houseId) {
      this.houseId = houseId;
      return this;
    }

    @com.google.api.client.util.Key("user_id")
    private java.lang.Integer userId;

    /**

     */
    public java.lang.Integer getUserId() {
      return userId;
    }

    public RemoveUserFromHouse setUserId(java.lang.Integer userId) {
      this.userId = userId;
      return this;
    }

    @Override
    public RemoveUserFromHouse set(String parameterName, Object value) {
      return (RemoveUserFromHouse) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "signInFacebook".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link SignInFacebook#execute()} method to invoke the remote operation.
   *
   * @param facebookUserId
   * @param content the {@link com.example.nuno.myapplication.housync_backend.myApi.model.HouSyncUser}
   * @return the request
   */
  public SignInFacebook signInFacebook(java.lang.String facebookUserId, com.example.nuno.myapplication.housync_backend.myApi.model.HouSyncUser content) throws java.io.IOException {
    SignInFacebook result = new SignInFacebook(facebookUserId, content);
    initialize(result);
    return result;
  }

  public class SignInFacebook extends MyApiRequest<com.example.nuno.myapplication.housync_backend.myApi.model.HouSyncUser> {

    private static final String REST_PATH = "signInFacebook/{facebookUserId}";

    /**
     * Create a request for the method "signInFacebook".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link SignInFacebook#execute()} method to invoke the remote operation.
     * <p> {@link SignInFacebook#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
     * ientRequest)} must be called to initialize this instance immediately after invoking the
     * constructor. </p>
     *
     * @param facebookUserId
     * @param content the {@link com.example.nuno.myapplication.housync_backend.myApi.model.HouSyncUser}
     * @since 1.13
     */
    protected SignInFacebook(java.lang.String facebookUserId, com.example.nuno.myapplication.housync_backend.myApi.model.HouSyncUser content) {
      super(MyApi.this, "POST", REST_PATH, content, com.example.nuno.myapplication.housync_backend.myApi.model.HouSyncUser.class);
      this.facebookUserId = com.google.api.client.util.Preconditions.checkNotNull(facebookUserId, "Required parameter facebookUserId must be specified.");
    }

    @Override
    public SignInFacebook setAlt(java.lang.String alt) {
      return (SignInFacebook) super.setAlt(alt);
    }

    @Override
    public SignInFacebook setFields(java.lang.String fields) {
      return (SignInFacebook) super.setFields(fields);
    }

    @Override
    public SignInFacebook setKey(java.lang.String key) {
      return (SignInFacebook) super.setKey(key);
    }

    @Override
    public SignInFacebook setOauthToken(java.lang.String oauthToken) {
      return (SignInFacebook) super.setOauthToken(oauthToken);
    }

    @Override
    public SignInFacebook setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (SignInFacebook) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public SignInFacebook setQuotaUser(java.lang.String quotaUser) {
      return (SignInFacebook) super.setQuotaUser(quotaUser);
    }

    @Override
    public SignInFacebook setUserIp(java.lang.String userIp) {
      return (SignInFacebook) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String facebookUserId;

    /**

     */
    public java.lang.String getFacebookUserId() {
      return facebookUserId;
    }

    public SignInFacebook setFacebookUserId(java.lang.String facebookUserId) {
      this.facebookUserId = facebookUserId;
      return this;
    }

    @Override
    public SignInFacebook set(String parameterName, Object value) {
      return (SignInFacebook) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "signInGoogle".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link SignInGoogle#execute()} method to invoke the remote operation.
   *
   * @param googleUserId
   * @param content the {@link com.example.nuno.myapplication.housync_backend.myApi.model.HouSyncUser}
   * @return the request
   */
  public SignInGoogle signInGoogle(java.lang.String googleUserId, com.example.nuno.myapplication.housync_backend.myApi.model.HouSyncUser content) throws java.io.IOException {
    SignInGoogle result = new SignInGoogle(googleUserId, content);
    initialize(result);
    return result;
  }

  public class SignInGoogle extends MyApiRequest<com.example.nuno.myapplication.housync_backend.myApi.model.HouSyncUser> {

    private static final String REST_PATH = "signInGoogle/{googleUserId}";

    /**
     * Create a request for the method "signInGoogle".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link SignInGoogle#execute()} method to invoke the remote operation. <p>
     * {@link
     * SignInGoogle#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param googleUserId
     * @param content the {@link com.example.nuno.myapplication.housync_backend.myApi.model.HouSyncUser}
     * @since 1.13
     */
    protected SignInGoogle(java.lang.String googleUserId, com.example.nuno.myapplication.housync_backend.myApi.model.HouSyncUser content) {
      super(MyApi.this, "POST", REST_PATH, content, com.example.nuno.myapplication.housync_backend.myApi.model.HouSyncUser.class);
      this.googleUserId = com.google.api.client.util.Preconditions.checkNotNull(googleUserId, "Required parameter googleUserId must be specified.");
    }

    @Override
    public SignInGoogle setAlt(java.lang.String alt) {
      return (SignInGoogle) super.setAlt(alt);
    }

    @Override
    public SignInGoogle setFields(java.lang.String fields) {
      return (SignInGoogle) super.setFields(fields);
    }

    @Override
    public SignInGoogle setKey(java.lang.String key) {
      return (SignInGoogle) super.setKey(key);
    }

    @Override
    public SignInGoogle setOauthToken(java.lang.String oauthToken) {
      return (SignInGoogle) super.setOauthToken(oauthToken);
    }

    @Override
    public SignInGoogle setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (SignInGoogle) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public SignInGoogle setQuotaUser(java.lang.String quotaUser) {
      return (SignInGoogle) super.setQuotaUser(quotaUser);
    }

    @Override
    public SignInGoogle setUserIp(java.lang.String userIp) {
      return (SignInGoogle) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String googleUserId;

    /**

     */
    public java.lang.String getGoogleUserId() {
      return googleUserId;
    }

    public SignInGoogle setGoogleUserId(java.lang.String googleUserId) {
      this.googleUserId = googleUserId;
      return this;
    }

    @Override
    public SignInGoogle set(String parameterName, Object value) {
      return (SignInGoogle) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateHouseData".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link UpdateHouseData#execute()} method to invoke the remote operation.
   *
   * @param houseId
   * @param field
   * @param newValue
   * @return the request
   */
  public UpdateHouseData updateHouseData(java.lang.Integer houseId, java.lang.String field, java.lang.String newValue) throws java.io.IOException {
    UpdateHouseData result = new UpdateHouseData(houseId, field, newValue);
    initialize(result);
    return result;
  }

  public class UpdateHouseData extends MyApiRequest<com.example.nuno.myapplication.housync_backend.myApi.model.HouSyncHouse> {

    private static final String REST_PATH = "housynchouse/{houseId}/{field}/{newValue}";

    /**
     * Create a request for the method "updateHouseData".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link UpdateHouseData#execute()} method to invoke the remote operation.
     * <p> {@link UpdateHouseData#initialize(com.google.api.client.googleapis.services.AbstractGoogleC
     * lientRequest)} must be called to initialize this instance immediately after invoking the
     * constructor. </p>
     *
     * @param houseId
     * @param field
     * @param newValue
     * @since 1.13
     */
    protected UpdateHouseData(java.lang.Integer houseId, java.lang.String field, java.lang.String newValue) {
      super(MyApi.this, "PUT", REST_PATH, null, com.example.nuno.myapplication.housync_backend.myApi.model.HouSyncHouse.class);
      this.houseId = com.google.api.client.util.Preconditions.checkNotNull(houseId, "Required parameter houseId must be specified.");
      this.field = com.google.api.client.util.Preconditions.checkNotNull(field, "Required parameter field must be specified.");
      this.newValue = com.google.api.client.util.Preconditions.checkNotNull(newValue, "Required parameter newValue must be specified.");
    }

    @Override
    public UpdateHouseData setAlt(java.lang.String alt) {
      return (UpdateHouseData) super.setAlt(alt);
    }

    @Override
    public UpdateHouseData setFields(java.lang.String fields) {
      return (UpdateHouseData) super.setFields(fields);
    }

    @Override
    public UpdateHouseData setKey(java.lang.String key) {
      return (UpdateHouseData) super.setKey(key);
    }

    @Override
    public UpdateHouseData setOauthToken(java.lang.String oauthToken) {
      return (UpdateHouseData) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateHouseData setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateHouseData) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateHouseData setQuotaUser(java.lang.String quotaUser) {
      return (UpdateHouseData) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateHouseData setUserIp(java.lang.String userIp) {
      return (UpdateHouseData) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Integer houseId;

    /**

     */
    public java.lang.Integer getHouseId() {
      return houseId;
    }

    public UpdateHouseData setHouseId(java.lang.Integer houseId) {
      this.houseId = houseId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String field;

    /**

     */
    public java.lang.String getField() {
      return field;
    }

    public UpdateHouseData setField(java.lang.String field) {
      this.field = field;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String newValue;

    /**

     */
    public java.lang.String getNewValue() {
      return newValue;
    }

    public UpdateHouseData setNewValue(java.lang.String newValue) {
      this.newValue = newValue;
      return this;
    }

    @Override
    public UpdateHouseData set(String parameterName, Object value) {
      return (UpdateHouseData) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link MyApi}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link MyApi}. */
    @Override
    public MyApi build() {
      return new MyApi(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link MyApiRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setMyApiRequestInitializer(
        MyApiRequestInitializer myapiRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(myapiRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
